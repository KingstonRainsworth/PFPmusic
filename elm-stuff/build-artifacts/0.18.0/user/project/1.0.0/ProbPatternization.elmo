var _user$project$ProbPatternization$floatCreator = F2(
	function (seed, fg) {
		var _p0 = A2(_elm_lang$core$Random$step, fg, seed);
		var f = _p0._0;
		var s2 = _p0._1;
		return {ctor: '_Tuple2', _0: f, _1: s2};
	});
var _user$project$ProbPatternization$probability = A2(_elm_lang$core$Random$float, 0, 1);
var _user$project$ProbPatternization$initialModel = {pz4: 0, pz8: 0, pz12: 0, pz16: 0, pz32: 0, pz64: 0, pz128: 0};
var _user$project$ProbPatternization$init = {ctor: '_Tuple2', _0: _user$project$ProbPatternization$initialModel, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$ProbPatternization$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'Set':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'Reset':
				return {ctor: '_Tuple2', _0: _user$project$ProbPatternization$initialModel, _1: _elm_lang$core$Platform_Cmd$none};
			default:
				var seed = _elm_lang$core$Random$initialSeed(7);
				var _p2 = A2(_user$project$ProbPatternization$floatCreator, seed, _user$project$ProbPatternization$probability);
				var pz4n = _p2._0;
				var s2 = _p2._1;
				var _p3 = A2(_user$project$ProbPatternization$floatCreator, s2, _user$project$ProbPatternization$probability);
				var pz8n = _p3._0;
				var s3 = _p3._1;
				var _p4 = A2(_user$project$ProbPatternization$floatCreator, s3, _user$project$ProbPatternization$probability);
				var pz12n = _p4._0;
				var s4 = _p4._1;
				var _p5 = A2(_user$project$ProbPatternization$floatCreator, s4, _user$project$ProbPatternization$probability);
				var pz16n = _p5._0;
				var s5 = _p5._1;
				var _p6 = A2(_user$project$ProbPatternization$floatCreator, s5, _user$project$ProbPatternization$probability);
				var pz32n = _p6._0;
				var s6 = _p6._1;
				var _p7 = A2(_user$project$ProbPatternization$floatCreator, s6, _user$project$ProbPatternization$probability);
				var pz64n = _p7._0;
				var s7 = _p7._1;
				var _p8 = A2(_user$project$ProbPatternization$floatCreator, s7, _user$project$ProbPatternization$probability);
				var pz128n = _p8._0;
				var s8 = _p8._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{pz4: pz4n, pz8: pz8n, pz12: pz12n, pz16: pz16n, pz32: pz32n, pz64: pz64n, pz128: pz128n}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$ProbPatternization$Model = F7(
	function (a, b, c, d, e, f, g) {
		return {pz4: a, pz8: b, pz12: c, pz16: d, pz32: e, pz64: f, pz128: g};
	});
var _user$project$ProbPatternization$Randomize = {ctor: 'Randomize'};
var _user$project$ProbPatternization$Reset = {ctor: 'Reset'};
var _user$project$ProbPatternization$Set = {ctor: 'Set'};
