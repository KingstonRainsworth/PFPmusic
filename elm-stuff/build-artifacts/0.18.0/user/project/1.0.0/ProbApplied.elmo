var _user$project$ProbApplied$floatCreator = F2(
	function (seed, fg) {
		var _p0 = A2(_elm_lang$core$Random$step, fg, seed);
		var f = _p0._0;
		var s2 = _p0._1;
		return {ctor: '_Tuple2', _0: f, _1: s2};
	});
var _user$project$ProbApplied$probability = A2(_elm_lang$core$Random$float, 0, 1);
var _user$project$ProbApplied$initialModel = {pac1: 0, pac4: 0, pac5: 0, pac7: 0};
var _user$project$ProbApplied$init = {ctor: '_Tuple2', _0: _user$project$ProbApplied$initialModel, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$ProbApplied$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'Set':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'Reset':
				return {ctor: '_Tuple2', _0: _user$project$ProbApplied$initialModel, _1: _elm_lang$core$Platform_Cmd$none};
			default:
				var seed = _p1._0;
				var _p2 = A2(_user$project$ProbApplied$floatCreator, seed, _user$project$ProbApplied$probability);
				var pac1n = _p2._0;
				var s2 = _p2._1;
				var _p3 = A2(_user$project$ProbApplied$floatCreator, s2, _user$project$ProbApplied$probability);
				var pac4n = _p3._0;
				var s3 = _p3._1;
				var _p4 = A2(_user$project$ProbApplied$floatCreator, s3, _user$project$ProbApplied$probability);
				var pac5n = _p4._0;
				var s4 = _p4._1;
				var _p5 = A2(_user$project$ProbApplied$floatCreator, s4, _user$project$ProbApplied$probability);
				var pac7n = _p5._0;
				var s5 = _p5._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{pac1: pac1n, pac4: pac4n, pac5: pac5n, pac7: pac7n}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$ProbApplied$Model = F4(
	function (a, b, c, d) {
		return {pac1: a, pac4: b, pac5: c, pac7: d};
	});
var _user$project$ProbApplied$Randomize = function (a) {
	return {ctor: 'Randomize', _0: a};
};
var _user$project$ProbApplied$Reset = {ctor: 'Reset'};
var _user$project$ProbApplied$Set = {ctor: 'Set'};
