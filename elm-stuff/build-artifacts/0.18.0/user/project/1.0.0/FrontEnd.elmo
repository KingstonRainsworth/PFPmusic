var _user$project$FrontEnd$viewCheck = function (model) {
	var v1 = model.value1;
	var v2 = model.value2;
	var v3 = model.value3;
	var v4 = model.value4;
	return ((_elm_lang$core$Native_Utils.cmp(v1, 0) < 0) || ((_elm_lang$core$Native_Utils.cmp(v1, 1) > 0) || ((_elm_lang$core$Native_Utils.cmp(v2, 0) < 0) || ((_elm_lang$core$Native_Utils.cmp(v2, 1) > 0) || ((_elm_lang$core$Native_Utils.cmp(v3, 0) < 0) || ((_elm_lang$core$Native_Utils.cmp(v3, 1) > 0) || ((_elm_lang$core$Native_Utils.cmp(v4, 0) < 0) || (_elm_lang$core$Native_Utils.cmp(v4, 1) > 0)))))))) ? A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'color', _1: 'red'},
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('input not a probability'),
			_1: {ctor: '[]'}
		}) : A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'color', _1: 'green'},
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('OK'),
			_1: {ctor: '[]'}
		});
};
var _user$project$FrontEnd$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'Reset':
				return _elm_lang$core$Native_Utils.update(
					model,
					{value1: 0, value2: 0, value3: 0, value4: 0});
			case 'Prop1':
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						value1: A2(
							_elm_lang$core$Result$withDefault,
							0,
							_elm_lang$core$String$toFloat(_p0._0))
					});
			case 'Prop2':
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						value2: A2(
							_elm_lang$core$Result$withDefault,
							0,
							_elm_lang$core$String$toFloat(_p0._0))
					});
			case 'Prop3':
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						value3: A2(
							_elm_lang$core$Result$withDefault,
							0,
							_elm_lang$core$String$toFloat(_p0._0))
					});
			case 'Prop4':
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						value4: A2(
							_elm_lang$core$Result$withDefault,
							0,
							_elm_lang$core$String$toFloat(_p0._0))
					});
			default:
				return _elm_lang$core$Native_Utils.crashCase(
					'FrontEnd',
					{
						start: {line: 58, column: 20},
						end: {line: 65, column: 26}
					},
					_p0)('TODO');
		}
	});
var _user$project$FrontEnd$initialModel = {value1: 0, value2: 0, value3: 0, value4: 0};
var _user$project$FrontEnd$init = {ctor: '_Tuple2', _0: _user$project$FrontEnd$initialModel, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$FrontEnd$Model = F4(
	function (a, b, c, d) {
		return {value1: a, value2: b, value3: c, value4: d};
	});
var _user$project$FrontEnd$Generate = {ctor: 'Generate'};
var _user$project$FrontEnd$Reset = {ctor: 'Reset'};
var _user$project$FrontEnd$Prop4 = function (a) {
	return {ctor: 'Prop4', _0: a};
};
var _user$project$FrontEnd$Prop3 = function (a) {
	return {ctor: 'Prop3', _0: a};
};
var _user$project$FrontEnd$Prop2 = function (a) {
	return {ctor: 'Prop2', _0: a};
};
var _user$project$FrontEnd$Prop1 = function (a) {
	return {ctor: 'Prop1', _0: a};
};
var _user$project$FrontEnd$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$type_('text'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$placeholder('value1'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onInput(_user$project$FrontEnd$Prop1),
							_1: {ctor: '[]'}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$type_('text'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$placeholder('value2'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(_user$project$FrontEnd$Prop2),
								_1: {ctor: '[]'}
							}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$type_('text'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$placeholder('value3'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onInput(_user$project$FrontEnd$Prop3),
									_1: {ctor: '[]'}
								}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$input,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$type_('text'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$placeholder('value4'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(_user$project$FrontEnd$Prop4),
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$button,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(_user$project$FrontEnd$Reset),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Reset'),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$button,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(_user$project$FrontEnd$Generate),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Generate'),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: _user$project$FrontEnd$viewCheck(model),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$h1,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text(
													_elm_lang$core$Basics$toString(model)),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				}
			}
		});
};
var _user$project$FrontEnd$main = _elm_lang$html$Html$beginnerProgram(
	{model: _user$project$FrontEnd$initialModel, view: _user$project$FrontEnd$view, update: _user$project$FrontEnd$update})();
